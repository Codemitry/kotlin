apply plugin: 'de.undercouch.download'
apply plugin: 'base'

final boolean isTeamcityBuild = System.getenv("TEAMCITY_VERSION") != null

// kotlin/libraries/tools/kotlin-dokka-stdlib  ->  kotlin
final File kotlinRootDir = rootProject.file( "../../../")
final File kotlinLibsDir = new File(buildDir, 'libs')

final String kotlinVersion = isTeamcityBuild ? System.getProperty("deployVersion") : "1.5.255-SNAPSHOT"
final String repo = isTeamcityBuild ? new File(buildDir, 'repo') : new File(kotlinRootDir, 'build/repo')

repositories {
  maven { url = repo }
  mavenCentral()
}

final List<String> modules = [
        "kotlin-stdlib",
        "kotlin-stdlib-common",
        "kotlin-stdlib-jdk7",
        "kotlin-stdlib-jdk8",
        "kotlin-stdlib-js",
        "kotlin-test",
        "kotlin-test-js",
        "kotlin-test-junit5",
        "kotlin-test-junit",
        "kotlin-test-testng",
        "kotlin-test-common",
]


task extractLibs() {
  doFirst {
    println("Extracting...")
    println("isTeamcityBuild: ${isTeamcityBuild}")
    println("kotlinVersion: ${kotlinVersion}")
    println("repo: ${repo}")
  }
}


modules.forEach { module ->
  final String lib = "kotlin_lib_$module"

  final Configuration  lib_src = configurations.create(lib)

  if (module == "kotlin-test-js") {
    lib_src.attributes {attribute(Usage.USAGE_ATTRIBUTE, objects.named(Usage, "kotlin-runtime")) }
  }

  dependencies {
    "$lib"(group: 'org.jetbrains.kotlin', name: module, version: kotlinVersion)
  }

  final Task libsTask = tasks.create("extract_lib_$module", Sync) {
    dependsOn lib_src

    from { lib_src }
    into "$kotlinLibsDir/$module"
  }

  extractLibs.dependsOn libsTask
}

project.extensions.kotlin_root = kotlinRootDir
project.extensions.kotlin_libs = kotlinLibsDir
