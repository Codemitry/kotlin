/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package kotlin.reflect.jvm.internal

import org.jetbrains.kotlin.types.KotlinTypeFactory
import org.jetbrains.kotlin.types.SimpleType
import kotlin.reflect.KType

internal fun createPlatformKType(lowerBound: KType, upperBound: KType): KType {
    // lowerBound/upperBound are guaranteed to be KTypeImpl over SimpleType, as long as this function is only used from the bytecode
    // generated by the compiler for `typeOf`.
    return KTypeImpl(
        KotlinTypeFactory.flexibleType(
            (lowerBound as KTypeImpl).type as SimpleType,
            (upperBound as KTypeImpl).type as SimpleType,
        )
    )
}
